import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'
import { jwtDecode } from 'jwt-decode'

interface JWTPayload {
  id: string;
  email: string;
  role: string;
  exp: number;
  iat: number;
}

export function middleware(request: NextRequest) {
  const { pathname } = request.nextUrl
  
  // Get the session token from cookies
  const sessionToken = request.cookies.get('nexnode-session')?.value
  
  // Define public routes that don't require authentication
  const publicRoutes = [
    '/login', 
    '/signup', 
    '/forgot-password', 
    '/two-factor',
    '/forgot-password/create-new-password',
    '/'
  ]
  
  const isPublicRoute = publicRoutes.some(route => 
    pathname === route || pathname.startsWith(route + '/')
  )
  
  // Define auth routes (login, signup, etc.)
  const authRoutes = [
    '/login', 
    '/signup', 
    '/forgot-password', 
    '/two-factor'
  ]
  
  const isAuthRoute = authRoutes.some(route => 
    pathname === route || pathname.startsWith(route + '/')
  )
  
  // Check if token is valid and not expired
  let isValidToken = false
  if (sessionToken) {
    try {
      const decoded = jwtDecode<JWTPayload>(sessionToken)
      isValidToken = decoded.exp * 1000 > Date.now()
    } catch {
      // Token is invalid
      isValidToken = false
    }
  }
  
  // If user is on an auth route and has a valid session, redirect to dashboard
  if (isAuthRoute && isValidToken) {
    return NextResponse.redirect(new URL('/dashboard', request.url))
  }
  
  // If user is on a protected route and doesn't have a valid session, redirect to login
  if (!isPublicRoute && !isValidToken) {
    return NextResponse.redirect(new URL('/login', request.url))
  }
  
  return NextResponse.next()
}

export const config = {
  matcher: [
    /*
     * Match all request paths except for the ones starting with:
     * - api (API routes)
     * - _next/static (static files)
     * - _next/image (image optimization files)
     * - favicon.ico (favicon file)
     */
    '/((?!api|_next/static|_next/image|favicon.ico).*)',
  ],
} 